{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue254;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c99608;\cssrgb\c100000\c100000\c100000;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28 \cf2 \cb3 import numpy as np\cb4 \
\cb3 import cvxpy as cp\cb4 \
\cb3 import scipy as sp\cb4 \
\cb3 import scipy.linalg as spla\cb4 \
\cb3 import matplotlib as mpl\cb4 \
\cb3 import control as ctrl\cb4 \
\cb3 import matplotlib.pyplot as plt\cb4 \
\cb3 from numpy import linalg as LA\cb4 \
\
\cb3 # Define the problem data...\cb4 \
\cb3 n = 2 # 2 states\cb4 \
\cb3 m = 1 # 1 input\cb4 \
\
\cb3 # Computation of matrices P and K...\cb4 \
\cb3 N = 5\cb4 \
\cb3 R = 25\cb4 \
\cb3 Pf = np.eye(2)\cb4 \
\cb3 Q = np.eye(2)\cb4 \
\cb3 A = [[0.9,1.5],[1.3,-0.7]]\cb4 \
\cb3 B = [[0.5],[0.2]]\cb4 \
\cb3 A = np.array(A)\cb4 \
\cb3 B = np.array(B)\cb4 \
\
\cb3 N = 50\cb4 \
\cb3 P = np.zeros((n, n, N+1)) # tensor\cb4 \
\cb3 K = np.zeros((m, n, N)) # tensor (3D array)\cb4 \
\cb3 P[:,:,N] = Pf\cb4 \
\
\cb3 P, _, K = ctrl.dare(A, B, Q, R)\cb4 \
\cb3 K = -K\cb4 \
\cb3 print('For 3i)')\cb4 \
\cb3 print("K =")\cb4 \
\cb3 print(K)\cb4 \
\cb3 print("P =")\cb4 \
\cb3 print(P)\cb4 \
}